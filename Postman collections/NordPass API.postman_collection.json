{
	"info": {
		"_postman_id": "2b6fa47a-5b28-4281-9a50-3fcefb9a8acc",
		"name": "NordPass API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29980465"
	},
	"item": [
		{
			"name": "Authentification",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Login successful\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"if (typeof responseBody === 'undefined') {\r",
							"    let responseBody = pm.response.json();\r",
							"    pm.environment.set(\"accessToken\", responseBody.token);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"john@doe.com\",\r\n  \"password\": \"veryStrongPassword\"\r\n}"
				},
				"url": {
					"raw": "https://virtserver.swaggerhub.com/nord-s/User-API/1.0.0/v1/user/login",
					"protocol": "https",
					"host": [
						"virtserver",
						"swaggerhub",
						"com"
					],
					"path": [
						"nord-s",
						"User-API",
						"1.0.0",
						"v1",
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post new user item",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201 and response has expected structure\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"\r",
							"    let createdItems = pm.response.json();\r",
							"    pm.expect(createdItems).to.be.an('array').that.is.not.empty;\r",
							"\r",
							"    let createdItem = createdItems[0];\r",
							"    pm.expect(createdItem).to.be.an('object');\r",
							"    pm.expect(createdItem).to.have.property(\"id\").that.is.a('string');\r",
							"    pm.expect(createdItem).to.have.property(\"title\").that.is.a('string');\r",
							"    pm.expect(createdItem).to.have.property(\"tags\").that.is.an('array').that.is.not.empty;\r",
							"    pm.expect(createdItem).to.have.property(\"files\").that.is.an('array').that.is.not.empty;\r",
							"    pm.expect(createdItem).to.have.property(\"fields\").that.is.an('array').that.is.not.empty;\r",
							"    pm.expect(createdItem).to.have.property(\"created_at\").that.is.a('string');\r",
							"    pm.expect(createdItem).to.have.property(\"updated_at\").that.is.a('string');\r",
							"    pm.expect(createdItem.files[0]).to.have.property(\"id\").that.is.a('string');\r",
							"    pm.expect(createdItem.fields[0]).to.have.property(\"id\").that.is.a('string');\r",
							"\r",
							"    pm.environment.set(\"createdItemId\", createdItem.id);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": \"string\",\r\n  \"title\": \"string\",\r\n  \"tags\": [\r\n    \"string\"\r\n  ],\r\n  \"files\": [\r\n    {\r\n      \"id\": \"string\",\r\n      \"name\": \"string\",\r\n      \"size\": 0,\r\n      \"content_path\": \"string\"\r\n    }\r\n  ],\r\n  \"fields\": [\r\n    {\r\n      \"id\": \"string\",\r\n      \"label\": \"string\",\r\n      \"type\": \"string\",\r\n      \"value\": \"string\"\r\n    }\r\n  ]\r\n}"
				},
				"url": {
					"raw": "https://virtserver.swaggerhub.com/nord-s/User-API/1.0.0/user/item",
					"protocol": "https",
					"host": [
						"virtserver",
						"swaggerhub",
						"com"
					],
					"path": [
						"nord-s",
						"User-API",
						"1.0.0",
						"user",
						"item"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User Items",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response has expected structure\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    pm.expect(pm.response.json()).to.be.an('array').that.is.not.empty;\r",
							"    \r",
							"    let responseBody = pm.response.json()[0];\r",
							"    pm.expect(responseBody).to.be.an('object');\r",
							"    pm.expect(responseBody).to.have.property(\"items\").that.is.an('array').that.is.not.empty;\r",
							"    \r",
							"    pm.environment.set(\"secondItemId\", responseBody.items[1]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "https://virtserver.swaggerhub.com/nord-s/User-API/1.0.0/user/items?limit=10",
					"protocol": "https",
					"host": [
						"virtserver",
						"swaggerhub",
						"com"
					],
					"path": [
						"nord-s",
						"User-API",
						"1.0.0",
						"user",
						"items"
					],
					"query": [
						{
							"key": "limit",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Specific User Item",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Response has expected structure\", function () {\r",
							"    pm.expect(jsonData).to.be.an('array').that.is.not.empty;\r",
							"\r",
							"    let item = jsonData[0];\r",
							"\r",
							"    pm.expect(item).to.have.property(\"id\").that.is.a('string');\r",
							"    pm.expect(item).to.have.property(\"title\").that.is.a('string');\r",
							"\r",
							"    pm.expect(item).to.have.property(\"tags\").that.is.an('array').that.is.not.empty;\r",
							"\r",
							"    pm.expect(item).to.have.property(\"files\").that.is.an('array').that.is.not.empty;\r",
							"\r",
							"    pm.expect(item).to.have.property(\"fields\").that.is.an('array').that.is.not.empty;\r",
							"\r",
							"    pm.expect(item).to.have.property(\"shares\").that.is.an('array').that.is.not.empty;\r",
							"\r",
							"    pm.expect(item).to.have.property(\"created_at\").that.is.a('string');\r",
							"    pm.expect(item).to.have.property(\"updated_at\").that.is.a('string');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "https://virtserver.swaggerhub.com/nord-s/User-API/1.0.0/user/{{secondItemId}}/item",
					"protocol": "https",
					"host": [
						"virtserver",
						"swaggerhub",
						"com"
					],
					"path": [
						"nord-s",
						"User-API",
						"1.0.0",
						"user",
						"{{secondItemId}}",
						"item"
					]
				}
			},
			"response": []
		}
	]
}